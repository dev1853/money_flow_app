"""Add composite unique constraint on mapping_rules (keyword, workspace_id)

Revision ID: ae954b47388e
Revises: 0f385b2c3719
Create Date: 2025-06-22 09:45:02.189585

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ae954b47388e'
down_revision: Union[str, None] = '0f385b2c3719'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('mapping_rules', schema=None) as batch_op:
        batch_op.drop_index('ix_mapping_rules_keyword')
        batch_op.create_index(batch_op.f('ix_mapping_rules_keyword'), ['keyword'], unique=False)
        batch_op.create_unique_constraint('_keyword_workspace_uc', ['keyword', 'workspace_id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('mapping_rules', schema=None) as batch_op:
        batch_op.drop_constraint('_keyword_workspace_uc', type_='unique')
        batch_op.drop_index(batch_op.f('ix_mapping_rules_keyword'))
        batch_op.create_index('ix_mapping_rules_keyword', ['keyword'], unique=True)

    # ### end Alembic commands ###
