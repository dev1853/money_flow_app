"""Add is_income column to dds_articles table

Revision ID: 4d559058ac14 # <--- УБЕДИСЬ, ЧТО ЭТОТ ID СООТВЕТСТВУЕТ ТВОЕМУ ФАЙЛУ
Revises: 221b99b594d3 # <--- Этот ID может быть другим, не меняй его
Create Date: 2025-06-20 16:00:00.000000 # <--- Дата создания может быть другой, не меняй ее

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
# Убедись, что 'revision' и 'down_revision' совпадают с теми, что в твоем файле
revision = '4d559058ac14' # <--- УБЕДИСЬ, ЧТО ЭТОТ ID СООТВЕТСТВУЕТ ТВОЕМУ ФАЙЛУ
down_revision = '221b99b594d3' # <--- ЭТОТ ID МОЖЕТ БЫТЬ ДРУГИМ, НЕ МЕНЯЙ ЕГО
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dds_articles', schema=None) as batch_op:
        # 1. Добавляем колонку как nullable=True (временно)
        batch_op.add_column(sa.Column('is_income', sa.Boolean(), nullable=True))

    # 2. Обновляем существующие записи, чтобы установить значение по умолчанию (False)
    # Это делается вне batch_alter_table, напрямую через SQLAlchemy
    op.execute("UPDATE dds_articles SET is_income = FALSE WHERE is_income IS NULL") # <--- ДОБАВЛЕНО

    with op.batch_alter_table('dds_articles', schema=None) as batch_op:
        # 3. Изменяем колонку, чтобы она стала NOT NULL
        batch_op.alter_column('is_income',
                              existing_type=sa.Boolean(),
                              nullable=False) # <--- ДОБАВЛЕНО: Теперь nullable=False

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dds_articles', schema=None) as batch_op:
        batch_op.drop_column('is_income')

    # ### end Alembic commands ###