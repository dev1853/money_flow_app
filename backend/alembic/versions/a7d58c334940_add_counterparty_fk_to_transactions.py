"""add_counterparty_fk_to_transactions

Revision ID: a7d58c334940
Revises: 4259d4c80669
Create Date: 2025-07-09 17:15:33.591786

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a7d58c334940'
down_revision: Union[str, None] = '4259d4c80669'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('planned_payments')
    op.add_column('transactions', sa.Column('counterparty_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_transactions_counterparty_id'), 'transactions', ['counterparty_id'], unique=False)
    op.create_foreign_key(None, 'transactions', 'counterparties', ['counterparty_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_index(op.f('ix_transactions_counterparty_id'), table_name='transactions')
    op.drop_column('transactions', 'counterparty_id')
    op.create_table('planned_payments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False, comment='Описание платежа'),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False, comment='Сумма платежа (всегда положительная)'),
    sa.Column('payment_date', sa.DATE(), autoincrement=False, nullable=False, comment='Планируемая дата'),
    sa.Column('payment_type', postgresql.ENUM('INCOME', 'EXPENSE', name='paymenttype'), autoincrement=False, nullable=False, comment='Тип: доход или расход'),
    sa.Column('is_recurring', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('recurrence_rule', sa.VARCHAR(), autoincrement=False, nullable=True, comment='Правило повторения (напр., RRULE)'),
    sa.Column('workspace_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='planned_payments_owner_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name='planned_payments_workspace_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='planned_payments_pkey')
    )
    # ### end Alembic commands ###
