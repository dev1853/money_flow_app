"""Add article_type to dds_articles table

Revision ID: 5f1f0f0e7e86
Revises: c234b31408e1
Create Date: 2025-07-04 10:37:48.492865

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5f1f0f0e7e86'
down_revision: Union[str, None] = 'c234b31408e1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('dds_articles', sa.Column('article_type', sa.String(), nullable=False))
    op.drop_constraint('dds_articles_name_key', 'dds_articles', type_='unique')
    op.add_column('mapping_rules', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'mapping_rules', 'users', ['owner_id'], ['id'])
    op.drop_constraint('roles_name_key', 'roles', type_='unique')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_full_name'), 'users', ['full_name'], unique=False)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_constraint('_workspace_name_owner_uc', 'workspaces', type_='unique')
    op.create_index(op.f('ix_workspaces_name'), 'workspaces', ['name'], unique=False)
    op.drop_column('workspaces', 'created_at')
    op.drop_column('workspaces', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('workspaces', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('workspaces', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_workspaces_name'), table_name='workspaces')
    op.create_unique_constraint('_workspace_name_owner_uc', 'workspaces', ['name', 'owner_id'])
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_users_full_name'), table_name='users')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_unique_constraint('roles_name_key', 'roles', ['name'])
    op.drop_constraint(None, 'mapping_rules', type_='foreignkey')
    op.drop_column('mapping_rules', 'owner_id')
    op.create_unique_constraint('dds_articles_name_key', 'dds_articles', ['name'])
    op.drop_column('dds_articles', 'article_type')
    # ### end Alembic commands ###
