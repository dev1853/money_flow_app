"""Add default roles and account types

Revision ID: c234b31408e1
Revises: 9c4a13b2bf92
Create Date: 2025-07-04 10:19:55.570129

"""
from typing import Sequence, Union
from sqlalchemy.sql import table, column
from sqlalchemy import String, Integer, DateTime, Boolean, text
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c234b31408e1'
down_revision: Union[str, None] = '9c4a13b2bf92'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # 1. Вставка ролей по умолчанию
    # Создаем объект Table для взаимодействия с таблицей 'roles'
    roles_table = table(
        'roles',
        column('id', Integer),
        column('name', String)
    )
    op.bulk_insert(roles_table,
        [
            {'id': 1, 'name': 'admin'},
            {'id': 2, 'name': 'user'},
            {'id': 3, 'name': 'guest'} # Пример дополнительной роли
        ]
    )

    # 2. Обновление последовательности (SEQUENCE) для id, чтобы избежать конфликтов при последующих вставках
    # Это важно, чтобы auto-increment в PostgreSQL знал, с какого значения начинать после bulk_insert.
    # Если id вставляются вручную, последовательность может быть не синхронизирована.
    op.execute(text("SELECT setval('roles_id_seq', (SELECT MAX(id) FROM roles));"))


    # 3. Вставка типов счетов по умолчанию
    # Если вы хотите, чтобы account_types также были инициализированы
    account_types_table = table(
        'account_types',
        column('id', Integer),
        column('name', String),
        column('code', String)
    )
    op.bulk_insert(account_types_table,
        [
            {'id': 1, 'name': 'Наличные', 'code': 'cash'},
            {'id': 2, 'name': 'Банковский счет', 'code': 'bank_account'},
            {'id': 3, 'name': 'Наличные (касса)', 'code': 'cash_box'},
        ]
    )
    op.execute(text("SELECT setval('account_types_id_seq', (SELECT MAX(id) FROM account_types));"))


    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # 1. Удаление типов счетов
    op.execute(text("DELETE FROM account_types WHERE id IN (1, 2, 3);"))

    # 2. Удаление ролей
    op.execute(text("DELETE FROM roles WHERE id IN (1, 2, 3);"))

    # ### end Alembic commands ###