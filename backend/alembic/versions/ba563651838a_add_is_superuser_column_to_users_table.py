"""Add is_superuser column to users table

Revision ID: ba563651838a
Revises: 2ee18c7b625a
Create Date: 2025-06-17 19:15:18.575811

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ba563651838a'
down_revision: Union[str, None] = '2ee18c7b625a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_balance', sa.Float(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=True)
        batch_op.alter_column('owner_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('workspace_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_accounts_name'), ['name'], unique=False)
        batch_op.drop_column('initial_balance')
        batch_op.drop_column('balance')

    with op.batch_alter_table('dds_articles', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('owner_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('workspace_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('description')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('description')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date', sa.Date(), nullable=False))
        batch_op.alter_column('amount',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.alter_column('dds_article_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('workspace_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.drop_index('ix_transactions_account_id')
        batch_op.drop_index('ix_transactions_dds_article_id')
        batch_op.drop_index('ix_transactions_transaction_date')
        batch_op.drop_constraint('transactions_related_transaction_id_key', type_='unique')
        batch_op.drop_constraint('transactions_related_account_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('transactions_related_transaction_id_fkey', type_='foreignkey')
        batch_op.drop_column('transaction_date')
        batch_op.drop_column('related_account_id')
        batch_op.drop_column('related_transaction_id')
        batch_op.drop_column('currency')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_superuser', sa.Boolean(), nullable=True))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('role_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('workspaces', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('owner_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('description')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workspaces', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.alter_column('owner_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('role_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('is_superuser')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('related_transaction_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('related_account_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('transaction_date', sa.DATE(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('transactions_related_transaction_id_fkey', 'transactions', ['related_transaction_id'], ['id'])
        batch_op.create_foreign_key('transactions_related_account_id_fkey', 'accounts', ['related_account_id'], ['id'])
        batch_op.create_unique_constraint('transactions_related_transaction_id_key', ['related_transaction_id'])
        batch_op.create_index('ix_transactions_transaction_date', ['transaction_date'], unique=False)
        batch_op.create_index('ix_transactions_dds_article_id', ['dds_article_id'], unique=False)
        batch_op.create_index('ix_transactions_account_id', ['account_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('workspace_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('dds_article_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=15, scale=2),
               existing_nullable=False)
        batch_op.drop_column('date')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('dds_articles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.alter_column('workspace_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('owner_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('balance', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('initial_balance', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False))
        batch_op.drop_index(batch_op.f('ix_accounts_name'))
        batch_op.alter_column('workspace_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('owner_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('current_balance')

    # ### end Alembic commands ###
