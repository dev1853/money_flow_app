services:
  # --- Сервис Базы данных (PostgreSQL) ---
  postgres:
    image: postgres:15-alpine
    container_name: money_flow_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Ghbdtnjvktn}
      POSTGRES_DB: ${POSTGRES_DB:-money_flow_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - money_flow_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d money_flow_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # --- Сервис Бэкенда (FastAPI) ---
  backend:
    container_name: money_flow_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:Ghbdtnjvktn@postgres:5432/money_flow_db}
      SECRET_KEY: ${SECRET_KEY:-15b07f9af1e3f85afc6cd40ea4d6471b427ebe796d65ae2c043b23dae3a71c82}
      ALGORITHM: ${ALGORITHM:-HS256}
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - money_flow_network
    restart: unless-stopped
    env_file:
      - ./env.development

  # --- Сервис Фронтенда (React + Vite) ---
  frontend:
    container_name: money_flow_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - money_flow_network
    restart: unless-stopped

networks:
  money_flow_network:
    driver: bridge

volumes:
  postgres_data: